#!/bin/bash

# Get the fsf file from the command line argument.
FSF=$1
if [[ "$FSF" == "" ]]; then
        echo "I need a .fsf file to process, not submitting the job."
        echo "Try $ sub_feat /somepath/somefile.fsf"
        exit 1
fi
if [[ ! -f $FSF ]]; then
        echo "$FSF is not a file, giving up."
        exit 1
fi
if [[ "$FSF" != "/"* ]]; then
        echo "Converted local '$FSF' to absolute '$(pwd)/$FSF'"
        FSF=$(pwd)/$FSF
fi

# How many cores shall we allocate for this job?
# feat just uses 1 for now
CORES=4

# Make sure we have a place to store the script we're about to write.
mkdir -p ~/bin/slurm

# Write a new sbatch script

FSF_SHORT="${FSF##*/}"
FSF_SHORT="${FSF_SHORT%%.*}"
SCRIPT=~/bin/slurm/batch_sub-${FSF_SHORT}.sbatch

echo "#!/bin/bash" > "$SCRIPT"
echo "#SBATCH --job-name=feat_${CORES}" >> "$SCRIPT"
echo "#SBATCH --nodes=1" >> "$SCRIPT"
echo "#SBATCH --ntasks=1" >> "$SCRIPT"
echo "#SBATCH --cpus-per-task=${CORES}" >> "$SCRIPT"
echo "#SBATCH --mem=2gb" >> "$SCRIPT"
echo "#SBATCH --time=0" >> "$SCRIPT"
echo "#SBATCH --output=${HOME}/slurmlogs/feat-%j.out" >> "$SCRIPT"
echo "#SBATCH --error=${HOME}/slurmlogs/feat-%j.out" >> "$SCRIPT"
echo "#SBATCH --job-name=feat_${CORES}" >> "$SCRIPT"
echo "" >> "$SCRIPT"
echo "mkdir -p ~/slurmlogs" >> "$SCRIPT"
echo "" >> "$SCRIPT"
echo "echo Begin; date; hostname; pwd" >> "$SCRIPT"
echo "" >> "$SCRIPT"
echo "$FSLDIR/bin/feat $FSF" >> "$SCRIPT"
echo "" >> "$SCRIPT"
echo "echo End; date" >> "$SCRIPT"
echo "" >> "$SCRIPT"

# Create the command to run feat, remembering that SLURM doesn't have the same
# ENV that we do in a user shell.
sbatch -p fsl6 --export=ALL,OPENBLAS_NUM_THREADS=$CORES $SCRIPT
